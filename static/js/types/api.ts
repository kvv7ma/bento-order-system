/**
 * API Type Definitions
 * Auto-generated from schemas.py
 * 
 * ⚠️ DO NOT EDIT MANUALLY
 * This file is automatically generated from Python Pydantic schemas.
 * To make changes, edit schemas.py and run the type generation script.
 */

// ===== Common Types =====

export interface SuccessResponse {
  success: boolean;
  message: string;
}

export interface ErrorResponse {
  success: boolean;
  message: string;
  detail?: string;
}

// ===== Auth Types =====

export interface UserCreate {
  username: string;
  email: string;
  password: string;
  full_name: string;
  role: 'customer' | 'store';
}

export interface UserLogin {
  username: string;
  password: string;
}

export interface UserResponse {
  id: number;
  username: string;
  email: string;
  full_name: string;
  role: string;
  is_active: boolean;
  created_at: string;
}

export interface TokenResponse {
  access_token: string;
  token_type: string;
  user: UserResponse;
}

// ===== Menu Types =====

export interface MenuBase {
  name: string;
  price: number;
  description?: string;
  image_url?: string;
  is_available: boolean;
}

export interface MenuCreate extends MenuBase {}

export interface MenuUpdate {
  name?: string;
  price?: number;
  description?: string;
  image_url?: string;
  is_available?: boolean;
}

export interface MenuResponse extends MenuBase {
  id: number;
  created_at: string;
  updated_at: string;
}

export interface MenuListResponse {
  menus: MenuResponse[];
  total: number;
}

// ===== Order Types =====

export interface OrderBase {
  menu_id: number;
  quantity: number;
  delivery_time?: string; // HH:MM:SS format
  notes?: string;
}

export interface OrderCreate extends OrderBase {}

export interface OrderStatusUpdate {
  status: 'pending' | 'confirmed' | 'preparing' | 'ready' | 'completed' | 'cancelled';
}

export interface OrderResponse {
  id: number;
  user_id: number;
  menu_id: number;
  quantity: number;
  total_price: number;
  status: string;
  delivery_time?: string;
  notes?: string;
  ordered_at: string;
  updated_at: string;
  menu: MenuResponse;
  user?: UserResponse;
}

export interface OrderListResponse {
  orders: OrderResponse[];
  total: number;
}

export interface OrderSummary {
  total_orders: number;
  pending_orders: number;
  confirmed_orders: number;
  preparing_orders: number;
  ready_orders: number;
  completed_orders: number;
  cancelled_orders: number;
  total_sales: number;
}

// ===== Order History Types (NEW) =====

export interface OrderHistoryItem {
  // Order information
  id: number;
  quantity: number;
  total_price: number;
  status: string;
  delivery_time?: string;
  notes?: string;
  ordered_at: string;
  
  // Menu information (optimized for frontend)
  menu_name: string;
  menu_image_url?: string;
  menu_price: number;
}

export interface OrderHistoryResponse {
  orders: OrderHistoryItem[];
  total: number;
  pagination?: PaginationInfo;
}

// ===== Report Types =====

export interface DailySalesReport {
  date: string; // YYYY-MM-DD format
  total_orders: number;
  total_sales: number;
  popular_menu?: string;
}

export interface MenuSalesReport {
  menu_id: number;
  menu_name: string;
  total_quantity: number;
  total_sales: number;
}

export interface SalesReportResponse {
  period: string; // "daily", "weekly", "monthly"
  start_date: string;
  end_date: string;
  daily_reports: DailySalesReport[];
  menu_reports: MenuSalesReport[];
  total_sales: number;
  total_orders: number;
}

// ===== Filter Types =====

export interface OrderFilter {
  status?: string;
  user_id?: number;
  menu_id?: number;
  start_date?: string; // YYYY-MM-DD
  end_date?: string;   // YYYY-MM-DD
  page: number;
  per_page: number;
}

export interface MenuFilter {
  is_available?: boolean;
  price_min?: number;
  price_max?: number;
  search?: string;
  page: number;
  per_page: number;
}

// ===== Pagination Types =====

export interface PaginationInfo {
  page: number;
  per_page: number;
  total: number;
  total_pages: number;
  has_next: boolean;
  has_prev: boolean;
}

export interface PaginatedResponse {
  pagination: PaginationInfo;
}

// ===== Status Types =====

export type OrderStatus = 'pending' | 'confirmed' | 'preparing' | 'ready' | 'completed' | 'cancelled';
export type UserRole = 'customer' | 'store';